¿Que es la asincronia?

Hasta este punto del curso, hemos explorado el comportamiento del DOM, aprendiendo cómo acceder a la información y realizar modificaciones en él. Todo esto ha sido posible gracias a los fundamentos previos de JavaScript, HTML y CSS. Sin embargo, es importante tener en cuenta que hasta ahora hemos trabajado de manera sincrónica, lo que significa que una tarea se ejecuta inmediatamente después de la otra. Los eventos, las funciones y toda la lógica del script se ejecutan de manera secuencial, una tarea despues de finalizada la anterior. Este enfoque se conoce como lenguaje bloqueante, ya que el control no se devuelve hasta que la ejecución se completa.

Sin embargo, JavaScript es un lenguaje no bloqueante, lo que significa que puede gestionar tareas asincrónicas de manera eficiente. En lugar de esperar a que cada tarea se complete antes de pasar a la siguiente, JavaScript crea una lista de tareas pendientes y les presta atención a medida que sea necesario. Esto permite que el flujo principal del código continúe normalmente mientras las tareas asincrónicas se activan y se procesan en segundo plano. La asincronía es esencial para evitar bloqueos en la ejecución y mejorar la capacidad de respuesta de las aplicaciones web.